openapi: 3.0.0
info:
  contact:
    email: contact@rektangularstudios.com
    name: Rektangular Studios
    url: https://rektangularstudios.com
  license:
    name: MIT
    url: https://raw.githubusercontent.com/RektangularStudios/novellia-sdk/main/LICENSE
  termsOfService: TODO
  title: order-fulfillment
  version: 0.1.0
servers:
- description: API Gateway
  url: api.rektangularstudios.com/order-fulfillment
paths:
  /status:
    get:
      description: Information regarding status of microservice
      operationId: get-status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
      summary: Your GET endpoint
      tags: []
  /orders:
    get:
      description: Gets an order
      operationId: get-orders
      parameters:
      - description: Identifier for order
        explode: true
        in: query
        name: order_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: OK
      summary: Your GET endpoint
      tags: []
    post:
      description: Creates an order
      operationId: post-orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              properties: {}
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreated'
          description: OK
components:
  schemas:
    Status:
      description: Status of microservice, indicating service availabilities
      example:
        maintenance: true
        status: status
      properties:
        maintenance:
          description: kill-switch to tell users that the backend is not working correctly
            / is under maintenance
          type: boolean
        status:
          description: Status string. "UP" if everything is fine.
          type: string
      required:
      - maintenance
      - status
      title: Status
      type: object
    Order:
      description: Describes a single order
      example:
        order_status: order_status
        description: description
        payment:
          payment_address: payment_address
          payment_status: payment_status
          price_amount: 6.027456183070403
          price_currency_id: price_currency_id
        items:
        - quantity: 0
          product_id: product_id
        - quantity: 0
          product_id: product_id
        order_id: order_id
        customer:
          delivery_address: delivery_address
      properties:
        items:
          items:
            $ref: '#/components/schemas/Order_items'
          type: array
        customer:
          $ref: '#/components/schemas/Order_customer'
        payment:
          $ref: '#/components/schemas/Order_payment'
        order_id:
          description: Order ID for future reference
          type: string
        description:
          description: Description of order, useful metadata such as presale that
            occurred, etc.
          type: string
        order_status:
          description: Order status (i.e. awaiting payment, queued, refunded, ...)
          type: string
      required:
      - customer
      - description
      - items
      - order_id
      - order_status
      title: Order
      type: object
      x-examples:
        order-paid-with-ada:
          products:
          - product_id: PROD-01D78XYFJ1PRM1WPBAOU8JQMNV
            quantity: 4
          - product_id: PROD-01D78XYFJ1PRM1WPBCBT3VHMNV
            quantity: 2
          customer:
            delivery_address: addr1q80u75kavwd5sc7j52x0k8nrqd46540vcjgsvl4fhxjqqs60vcjwf9llp7rv006f0dqyffltyyyzpzl9vct4mp7wjdaspwq39a
          payment:
            payment_address: addr1q80u75kavwd5sc7j52x0k8nrqd46540vcjgsvl4fhxjqqs60vcjwf9llp7rv006f0dqyffltyyyzpzl9vct4mp7wjdaspwq39a
            price_currency_id: ada
            price_amount: 20
            status: AWAITING_PAYMENT
          order_id: ORDER-01D78XYFJ1PRM1WPBCBT3VHMNV
    OrderCreated:
      description: Response after an order is made
      example:
        order_id: order_id
      properties:
        order_id:
          type: string
      required:
      - order_id
      title: OrderCreated
      type: object
      x-examples:
        example-1:
          order_id: ORDER-01D78XYFJ1PRM1WPBCBT3VHMNV
    Order_items:
      example:
        quantity: 0
        product_id: product_id
      properties:
        product_id:
          type: string
        quantity:
          type: integer
      required:
      - product_id
      - quantity
      type: object
    Order_customer:
      example:
        delivery_address: delivery_address
      properties:
        delivery_address:
          description: Address to deliver tokens to
          type: string
      required:
      - delivery_address
      type: object
    Order_payment:
      example:
        payment_address: payment_address
        payment_status: payment_status
        price_amount: 6.027456183070403
        price_currency_id: price_currency_id
      properties:
        payment_address:
          description: Address to deposit currency
          type: string
        price_currency_id:
          description: Policy ID of currency
          type: string
        price_amount:
          description: Amount due in currency. Use `number` for fiat, but ADA is lovelace
            integral
          type: number
        payment_status:
          description: Payment status (i.e. waiting, received, ...)
          type: string
      required:
      - payment_address
      - payment_status
      - price_amount
      - price_currency_id
      type: object
