openapi: 3.0.0
info:
  contact:
    email: contact@rektangularstudios.com
    name: Rektangular Studios
    url: https://rektangularstudios.com
  license:
    name: MIT
    url: https://raw.githubusercontent.com/RektangularStudios/novellia-sdk/main/LICENSE
  termsOfService: TODO
  title: novellia-api
  version: "1.0"
servers:
- description: API Gateway
  url: api.rektangularstudios.com/novellia
paths:
  /wallet/{wallet_address}:
    get:
      description: Returns the tokens held in a wallet address
      operationId: get-wallet
      parameters:
      - description: Address of Cardano wallet to use
        explode: false
        in: path
        name: wallet_address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of tokens held by Cardano wallet
                items:
                  $ref: '#/components/schemas/Token'
                type: array
          description: OK
        "400":
          description: Bad Request
      summary: Your GET endpoint
      tags: []
  /workflow/minter/nvla:
    get:
      description: Returns execution information such as transaction cost
      operationId: get-workflow-minter-nvla
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInformation'
          description: OK
    post:
      description: Returns a transaction to mint NVLA and deposit it to a specified
        address
      operationId: post-workflow-minter-nvla
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinterInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardanoTransaction'
          description: OK
        "400":
          description: Bad Request
  /cardano/transaction:
    post:
      description: Submits a transaction to Cardano
      operationId: post-cardano-transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardanoTransaction'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
  /cardano/tip:
    get:
      description: Returns Cardano's latest block and epoch
      operationId: get-cardano-tip
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardanoTip'
          description: OK
      summary: Your GET endpoint
      tags: []
  /status:
    get:
      description: Information regarding availability of Novellia APIs
      operationId: get-status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
      summary: Your GET endpoint
      tags: []
  /products:
    get:
      description: Returns a list of products to list
      operationId: get-products
      parameters:
      - description: Filter product results by market
        explode: true
        in: query
        name: market_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter product results by organization
        explode: true
        in: query
        name: organization_id
        required: false
        schema:
          type: string
        style: form
      - description: Get specific product
        explode: true
        in: query
        name: product_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
          description: OK
      summary: Your GET endpoint
      tags: []
  /orders:
    get:
      description: Gets an order
      operationId: get-orders
      parameters:
      - description: Identifier for order
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: OK
      summary: Your GET endpoint
      tags: []
    post:
      description: Creates an order
      operationId: post-orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        "200":
          description: OK
components:
  schemas:
    Token:
      description: Generalizes the data required to describe a token in a Cardano
        wallet.
      example:
        amount: 0
        name: name
        description: description
        asset_id: asset_id
      properties:
        asset_id:
          description: Token asset ID registered on Cardano
          type: string
        amount:
          description: Amount of token held in Cardano wallet (in discrete units,
            i.e. lovelace)
          type: integer
        name:
          description: Name or ticker as interpreted by Novellia (e.g. NVLA, ADA)
          type: string
        description:
          description: Short description of token as interpreted by Novellia
          type: string
      required:
      - amount
      - asset_id
      title: Token
      type: object
    CardanoTransaction:
      description: A Cardano transaction to be signed and submitted.
      example:
        fee_lovelace: 0
        signed: true
        transaction: transaction
      properties:
        transaction:
          description: text of transaction file
          type: string
        fee_lovelace:
          description: Cost to submit TX in lovelace (1 ADA = 1,000,000 lovelace)
          type: integer
        signed:
          description: Indicates if the transaction is signed or raw
          type: boolean
      required:
      - fee_lovelace
      - signed
      - transaction
      title: CardanoTransaction
      type: object
    MinterInfo:
      description: Generic information required for minter workflows.
      example:
        wallet_address: wallet_address
        minter_deposit_address: minter_deposit_address
      properties:
        wallet_address:
          description: Wallet that pays transaction fee
          type: string
        minter_deposit_address:
          description: Wallet that received minted tokens
          type: string
      required:
      - minter_deposit_address
      - wallet_address
      title: MinterInfo
      type: object
    WorkflowInformation:
      description: Returns preconditions relevant to a user wanting to execute a workflow.
        I.e. costs.
      example:
        fee_lovelace: 0
      properties:
        fee_lovelace:
          description: The lovelace cost to execute the workflow
          type: integer
      title: WorkflowInformation
      type: object
    CardanoTip:
      description: Cardano chain tip information
      example:
        block: 0
        epoch: 6
      properties:
        block:
          description: Latest Cardano block
          type: integer
        epoch:
          description: Latest Cardano epoch
          type: integer
      required:
      - block
      - epoch
      title: CardanoTip
      type: object
    Status:
      description: Status of Novellia microservice, indicating service availabilities
      example:
        cardano:
          initialized: true
          sync_percentage: 0.8008281904610115
        maintenance: true
      properties:
        cardano:
          $ref: '#/components/schemas/Status_cardano'
        maintenance:
          description: kill-switch to tell users that the backend is not working correctly
            / is under maintenance
          type: boolean
      required:
      - cardano
      - maintenance
      title: Status
      type: object
    Product:
      description: A product to display for sale
      example:
        market:
          name: name
          market_id: 5
        metadata:
          date_listed: date_listed
          tags:
          - tags
          - tags
        product:
          token_policy_id: token_policy_id
          description_short: Occulta Novellia Character
          overview_image_urls:
          - overview_image_urls
          - overview_image_urls
          product_id: 7
          name: name
          description_long: A collectible character for the surreal horror game Occult
            Novellia. Armed with a steampunk rifle, Iscara packs a punch at a distance.
            The Iscara NFT picks off enemies at distance while her squad finishes
            them in brutal close quarters combat.
        artist:
          urls:
          - urls
          - urls
          name: name
        organization:
          organization_id: 1
          name: name
        asset:
          urls:
          - urls
          - urls
          loader: loader
        stock:
          total_supply: 2
          available: 5
        pricing:
          max_order_size: 6
          currency_policy_id: currency_policy_id
          purchase_address: purchase_address
          unit_price: 0
          date_available: date_available
      properties:
        asset:
          $ref: '#/components/schemas/Product_asset'
        pricing:
          $ref: '#/components/schemas/Product_pricing'
        organization:
          $ref: '#/components/schemas/Product_organization'
        market:
          $ref: '#/components/schemas/Product_market'
        stock:
          $ref: '#/components/schemas/Product_stock'
        metadata:
          $ref: '#/components/schemas/Product_metadata'
        artist:
          $ref: '#/components/schemas/Product_artist'
        product:
          $ref: '#/components/schemas/Product_product'
      required:
      - asset
      - market
      - metadata
      - organization
      - pricing
      - product
      - stock
      title: Product
      type: object
    OccultaNovelliaCharacter:
      description: Model for an Occulta Novellia character
      properties:
        id:
          type: string
      title: OccultaNovelliaCharacter
      type: object
    Order:
      description: Describes a single order
      example:
        payment:
          payment_address: payment_address
          price_amount: price_amount
          price_currency_id: price_currency_id
          status: status
        order_id: order_id
        products:
        - quantity: 0
          product_id: product_id
        - quantity: 0
          product_id: product_id
        customer:
          delivery_address: delivery_address
      properties:
        products:
          items:
            $ref: '#/components/schemas/Order_products'
          type: array
        customer:
          $ref: '#/components/schemas/Order_customer'
        payment:
          $ref: '#/components/schemas/Order_payment'
        order_id:
          description: Order ID for future reference
          type: string
      required:
      - customer
      - products
      title: Order
      type: object
    Status_cardano:
      example:
        initialized: true
        sync_percentage: 0.8008281904610115
      properties:
        initialized:
          description: whether cardano-graphql is initialized
          type: boolean
        sync_percentage:
          description: cardano-graphql sync percentage, used to gauge when APIs will
            be available
          type: number
      required:
      - initialized
      - sync_percentage
      type: object
    Product_asset:
      description: Resources for detailed view asset with specific loader
      example:
        urls:
        - urls
        - urls
        loader: loader
      properties:
        urls:
          description: URLs pointing to detailed asset for detailed view. Each link
            should point to the same file.
          items:
            type: string
          type: array
        loader:
          description: Asset loader for linked assets file
          type: string
      required:
      - loader
      - urls
      type: object
    Product_pricing:
      description: Pricing information for making a purchase
      example:
        max_order_size: 6
        currency_policy_id: currency_policy_id
        purchase_address: purchase_address
        unit_price: 0
        date_available: date_available
      properties:
        currency_policy_id:
          description: Currency product is priced with
          type: string
        unit_price:
          description: Price for a single item of product type
          type: integer
        max_order_size:
          description: Maximum units purchasable in a single transaction
          type: integer
        purchase_address:
          description: Address to send funds to purchase token. Leave empty if token
            is not yet for sale.
          type: string
        date_available:
          description: When the product is becoming available for sale. Leave empty
            if this is undetermined.
          type: string
      required:
      - currency_policy_id
      - max_order_size
      - unit_price
      type: object
    Product_organization:
      description: Organization listing the product
      example:
        organization_id: 1
        name: name
      properties:
        name:
          description: Readable name of organization
          type: string
        organization_id:
          description: Unique identifier for organization
          type: integer
      required:
      - name
      - organization_id
      type: object
    Product_market:
      description: Market for the product, under the organization
      example:
        name: name
        market_id: 5
      properties:
        name:
          description: Readable name of market
          type: string
        market_id:
          description: Unique identifier of market
          type: integer
      required:
      - market_id
      - name
      type: object
    Product_stock:
      description: Availability of product
      example:
        total_supply: 2
        available: 5
      properties:
        available:
          description: Tokens available to be sold
          type: integer
        total_supply:
          description: Total number of tokens in existence (scarcity). Leave empty
            for infinite supply.
          type: integer
      required:
      - available
      type: object
    Product_metadata:
      description: Filterable data regarding product
      example:
        date_listed: date_listed
        tags:
        - tags
        - tags
      properties:
        tags:
          description: Filterable tags describing the token
          items:
            type: string
          type: array
        date_listed:
          description: When the token was listed
          type: string
      required:
      - date_listed
      type: object
    Product_artist:
      description: Artist attribution
      example:
        urls:
        - urls
        - urls
        name: name
      properties:
        name:
          description: Name of artist for token asset
          type: string
        urls:
          description: URLs to learn more about artist (e.g. portfolio). These can
            point to different places.
          items:
            type: string
          type: array
      type: object
    Product_product:
      description: Details for generic products, standalone without asset resource
        or specific loader
      example:
        token_policy_id: token_policy_id
        description_short: Occulta Novellia Character
        overview_image_urls:
        - overview_image_urls
        - overview_image_urls
        product_id: 7
        name: name
        description_long: A collectible character for the surreal horror game Occult
          Novellia. Armed with a steampunk rifle, Iscara packs a punch at a distance.
          The Iscara NFT picks off enemies at distance while her squad finishes them
          in brutal close quarters combat.
      properties:
        overview_image_urls:
          description: URLs to image to display on overview
          items:
            type: string
          type: array
        token_policy_id:
          description: Token policy ID to refer to blockchain
          type: string
        name:
          description: Readable name of product
          type: string
        product_id:
          description: Unique identifier of product
          type: integer
        description_short:
          description: Short description of product
          example: Occulta Novellia Character
          type: string
        description_long:
          description: Long description of product
          example: A collectible character for the surreal horror game Occult Novellia.
            Armed with a steampunk rifle, Iscara packs a punch at a distance. The
            Iscara NFT picks off enemies at distance while her squad finishes them
            in brutal close quarters combat.
          type: string
      required:
      - name
      - overview_image_urls
      - product_id
      - token_policy_id
      type: object
    Order_products:
      example:
        quantity: 0
        product_id: product_id
      properties:
        product_id:
          type: string
        quantity:
          type: integer
      required:
      - product_id
      - quantity
      type: object
    Order_customer:
      example:
        delivery_address: delivery_address
      properties:
        delivery_address:
          description: Address to deliver tokens to
          type: string
      required:
      - delivery_address
      type: object
    Order_payment:
      example:
        payment_address: payment_address
        price_amount: price_amount
        price_currency_id: price_currency_id
        status: status
      properties:
        payment_address:
          description: Address to deposit currency
          type: string
        price_currency_id:
          description: Policy ID of currency
          type: string
        price_amount:
          description: Amount due in currency
          type: string
        status:
          description: Payment status (i.e. received, processing, ...)
          type: string
      required:
      - payment_address
      - price_amount
      - price_currency_id
      - status
      type: object
