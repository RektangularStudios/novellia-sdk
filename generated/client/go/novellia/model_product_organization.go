/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// ProductOrganization struct for ProductOrganization
type ProductOrganization struct {
	Name string `json:"name"`
	OrganizationId string `json:"organization_id"`
	// Organization description. This can be markdown.
	Description string `json:"description"`
}

// NewProductOrganization instantiates a new ProductOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductOrganization(name string, organizationId string, description string, ) *ProductOrganization {
	this := ProductOrganization{}
	this.Name = name
	this.OrganizationId = organizationId
	this.Description = description
	return &this
}

// NewProductOrganizationWithDefaults instantiates a new ProductOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductOrganizationWithDefaults() *ProductOrganization {
	this := ProductOrganization{}
	return &this
}

// GetName returns the Name field value
func (o *ProductOrganization) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProductOrganization) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProductOrganization) SetName(v string) {
	o.Name = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ProductOrganization) GetOrganizationId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ProductOrganization) GetOrganizationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ProductOrganization) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetDescription returns the Description field value
func (o *ProductOrganization) GetDescription() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ProductOrganization) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ProductOrganization) SetDescription(v string) {
	o.Description = v
}

func (o ProductOrganization) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if true {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableProductOrganization struct {
	value *ProductOrganization
	isSet bool
}

func (v NullableProductOrganization) Get() *ProductOrganization {
	return v.value
}

func (v *NullableProductOrganization) Set(val *ProductOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableProductOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableProductOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductOrganization(val *ProductOrganization) *NullableProductOrganization {
	return &NullableProductOrganization{value: val, isSet: true}
}

func (v NullableProductOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


