/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// ProductProduct Immutable 
type ProductProduct struct {
	Extended721Token *Extended721Token `json:"extended_721_token,omitempty"`
	NovelliaStandardToken *NovelliaStandardToken `json:"novellia_standard_token,omitempty"`
	NativeToken *NativeToken `json:"native_token,omitempty"`
	NovelliaProduct *NovelliaProduct `json:"novellia_product,omitempty"`
	// Unique identifier of product
	ProductId string `json:"product_id"`
}

// NewProductProduct instantiates a new ProductProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductProduct(productId string, ) *ProductProduct {
	this := ProductProduct{}
	this.ProductId = productId
	return &this
}

// NewProductProductWithDefaults instantiates a new ProductProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductProductWithDefaults() *ProductProduct {
	this := ProductProduct{}
	return &this
}

// GetExtended721Token returns the Extended721Token field value if set, zero value otherwise.
func (o *ProductProduct) GetExtended721Token() Extended721Token {
	if o == nil || o.Extended721Token == nil {
		var ret Extended721Token
		return ret
	}
	return *o.Extended721Token
}

// GetExtended721TokenOk returns a tuple with the Extended721Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetExtended721TokenOk() (*Extended721Token, bool) {
	if o == nil || o.Extended721Token == nil {
		return nil, false
	}
	return o.Extended721Token, true
}

// HasExtended721Token returns a boolean if a field has been set.
func (o *ProductProduct) HasExtended721Token() bool {
	if o != nil && o.Extended721Token != nil {
		return true
	}

	return false
}

// SetExtended721Token gets a reference to the given Extended721Token and assigns it to the Extended721Token field.
func (o *ProductProduct) SetExtended721Token(v Extended721Token) {
	o.Extended721Token = &v
}

// GetNovelliaStandardToken returns the NovelliaStandardToken field value if set, zero value otherwise.
func (o *ProductProduct) GetNovelliaStandardToken() NovelliaStandardToken {
	if o == nil || o.NovelliaStandardToken == nil {
		var ret NovelliaStandardToken
		return ret
	}
	return *o.NovelliaStandardToken
}

// GetNovelliaStandardTokenOk returns a tuple with the NovelliaStandardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetNovelliaStandardTokenOk() (*NovelliaStandardToken, bool) {
	if o == nil || o.NovelliaStandardToken == nil {
		return nil, false
	}
	return o.NovelliaStandardToken, true
}

// HasNovelliaStandardToken returns a boolean if a field has been set.
func (o *ProductProduct) HasNovelliaStandardToken() bool {
	if o != nil && o.NovelliaStandardToken != nil {
		return true
	}

	return false
}

// SetNovelliaStandardToken gets a reference to the given NovelliaStandardToken and assigns it to the NovelliaStandardToken field.
func (o *ProductProduct) SetNovelliaStandardToken(v NovelliaStandardToken) {
	o.NovelliaStandardToken = &v
}

// GetNativeToken returns the NativeToken field value if set, zero value otherwise.
func (o *ProductProduct) GetNativeToken() NativeToken {
	if o == nil || o.NativeToken == nil {
		var ret NativeToken
		return ret
	}
	return *o.NativeToken
}

// GetNativeTokenOk returns a tuple with the NativeToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetNativeTokenOk() (*NativeToken, bool) {
	if o == nil || o.NativeToken == nil {
		return nil, false
	}
	return o.NativeToken, true
}

// HasNativeToken returns a boolean if a field has been set.
func (o *ProductProduct) HasNativeToken() bool {
	if o != nil && o.NativeToken != nil {
		return true
	}

	return false
}

// SetNativeToken gets a reference to the given NativeToken and assigns it to the NativeToken field.
func (o *ProductProduct) SetNativeToken(v NativeToken) {
	o.NativeToken = &v
}

// GetNovelliaProduct returns the NovelliaProduct field value if set, zero value otherwise.
func (o *ProductProduct) GetNovelliaProduct() NovelliaProduct {
	if o == nil || o.NovelliaProduct == nil {
		var ret NovelliaProduct
		return ret
	}
	return *o.NovelliaProduct
}

// GetNovelliaProductOk returns a tuple with the NovelliaProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetNovelliaProductOk() (*NovelliaProduct, bool) {
	if o == nil || o.NovelliaProduct == nil {
		return nil, false
	}
	return o.NovelliaProduct, true
}

// HasNovelliaProduct returns a boolean if a field has been set.
func (o *ProductProduct) HasNovelliaProduct() bool {
	if o != nil && o.NovelliaProduct != nil {
		return true
	}

	return false
}

// SetNovelliaProduct gets a reference to the given NovelliaProduct and assigns it to the NovelliaProduct field.
func (o *ProductProduct) SetNovelliaProduct(v NovelliaProduct) {
	o.NovelliaProduct = &v
}

// GetProductId returns the ProductId field value
func (o *ProductProduct) GetProductId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetProductIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *ProductProduct) SetProductId(v string) {
	o.ProductId = v
}

func (o ProductProduct) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Extended721Token != nil {
		toSerialize["extended_721_token"] = o.Extended721Token
	}
	if o.NovelliaStandardToken != nil {
		toSerialize["novellia_standard_token"] = o.NovelliaStandardToken
	}
	if o.NativeToken != nil {
		toSerialize["native_token"] = o.NativeToken
	}
	if o.NovelliaProduct != nil {
		toSerialize["novellia_product"] = o.NovelliaProduct
	}
	if true {
		toSerialize["product_id"] = o.ProductId
	}
	return json.Marshal(toSerialize)
}

type NullableProductProduct struct {
	value *ProductProduct
	isSet bool
}

func (v NullableProductProduct) Get() *ProductProduct {
	return v.value
}

func (v *NullableProductProduct) Set(val *ProductProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableProductProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableProductProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductProduct(val *ProductProduct) *NullableProductProduct {
	return &NullableProductProduct{value: val, isSet: true}
}

func (v NullableProductProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


