/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// Product Describes a Product served from the Novellia microservice
type Product struct {
	Pricing ProductPricing `json:"pricing"`
	Organization ProductOrganization `json:"organization"`
	Market ProductMarket `json:"market"`
	Stock ProductStock `json:"stock"`
	Metadata ProductMetadata `json:"metadata"`
	Product ProductProduct `json:"product"`
	// List of entities to give attribution to for product
	Attribution *[]Attribution `json:"attribution,omitempty"`
}

// NewProduct instantiates a new Product object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct(pricing ProductPricing, organization ProductOrganization, market ProductMarket, stock ProductStock, metadata ProductMetadata, product ProductProduct, ) *Product {
	this := Product{}
	this.Pricing = pricing
	this.Organization = organization
	this.Market = market
	this.Stock = stock
	this.Metadata = metadata
	this.Product = product
	return &this
}

// NewProductWithDefaults instantiates a new Product object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWithDefaults() *Product {
	this := Product{}
	return &this
}

// GetPricing returns the Pricing field value
func (o *Product) GetPricing() ProductPricing {
	if o == nil  {
		var ret ProductPricing
		return ret
	}

	return o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value
// and a boolean to check if the value has been set.
func (o *Product) GetPricingOk() (*ProductPricing, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pricing, true
}

// SetPricing sets field value
func (o *Product) SetPricing(v ProductPricing) {
	o.Pricing = v
}

// GetOrganization returns the Organization field value
func (o *Product) GetOrganization() ProductOrganization {
	if o == nil  {
		var ret ProductOrganization
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *Product) GetOrganizationOk() (*ProductOrganization, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *Product) SetOrganization(v ProductOrganization) {
	o.Organization = v
}

// GetMarket returns the Market field value
func (o *Product) GetMarket() ProductMarket {
	if o == nil  {
		var ret ProductMarket
		return ret
	}

	return o.Market
}

// GetMarketOk returns a tuple with the Market field value
// and a boolean to check if the value has been set.
func (o *Product) GetMarketOk() (*ProductMarket, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Market, true
}

// SetMarket sets field value
func (o *Product) SetMarket(v ProductMarket) {
	o.Market = v
}

// GetStock returns the Stock field value
func (o *Product) GetStock() ProductStock {
	if o == nil  {
		var ret ProductStock
		return ret
	}

	return o.Stock
}

// GetStockOk returns a tuple with the Stock field value
// and a boolean to check if the value has been set.
func (o *Product) GetStockOk() (*ProductStock, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Stock, true
}

// SetStock sets field value
func (o *Product) SetStock(v ProductStock) {
	o.Stock = v
}

// GetMetadata returns the Metadata field value
func (o *Product) GetMetadata() ProductMetadata {
	if o == nil  {
		var ret ProductMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *Product) GetMetadataOk() (*ProductMetadata, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *Product) SetMetadata(v ProductMetadata) {
	o.Metadata = v
}

// GetProduct returns the Product field value
func (o *Product) GetProduct() ProductProduct {
	if o == nil  {
		var ret ProductProduct
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *Product) GetProductOk() (*ProductProduct, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *Product) SetProduct(v ProductProduct) {
	o.Product = v
}

// GetAttribution returns the Attribution field value if set, zero value otherwise.
func (o *Product) GetAttribution() []Attribution {
	if o == nil || o.Attribution == nil {
		var ret []Attribution
		return ret
	}
	return *o.Attribution
}

// GetAttributionOk returns a tuple with the Attribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetAttributionOk() (*[]Attribution, bool) {
	if o == nil || o.Attribution == nil {
		return nil, false
	}
	return o.Attribution, true
}

// HasAttribution returns a boolean if a field has been set.
func (o *Product) HasAttribution() bool {
	if o != nil && o.Attribution != nil {
		return true
	}

	return false
}

// SetAttribution gets a reference to the given []Attribution and assigns it to the Attribution field.
func (o *Product) SetAttribution(v []Attribution) {
	o.Attribution = &v
}

func (o Product) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pricing"] = o.Pricing
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if true {
		toSerialize["market"] = o.Market
	}
	if true {
		toSerialize["stock"] = o.Stock
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["product"] = o.Product
	}
	if o.Attribution != nil {
		toSerialize["attribution"] = o.Attribution
	}
	return json.Marshal(toSerialize)
}

type NullableProduct struct {
	value *Product
	isSet bool
}

func (v NullableProduct) Get() *Product {
	return v.value
}

func (v *NullableProduct) Set(val *Product) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct(val *Product) *NullableProduct {
	return &NullableProduct{value: val, isSet: true}
}

func (v NullableProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


