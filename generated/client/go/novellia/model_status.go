/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// Status Status of microservice, indicating service availabilities
type Status struct {
	Cardano StatusCardano `json:"cardano"`
	// kill-switch to tell users that the backend is not working correctly / is under maintenance
	Maintenance bool `json:"maintenance"`
	// Status string. \"UP\" if everything is fine.
	Status string `json:"status"`
}

// NewStatus instantiates a new Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatus(cardano StatusCardano, maintenance bool, status string, ) *Status {
	this := Status{}
	this.Cardano = cardano
	this.Maintenance = maintenance
	this.Status = status
	return &this
}

// NewStatusWithDefaults instantiates a new Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusWithDefaults() *Status {
	this := Status{}
	return &this
}

// GetCardano returns the Cardano field value
func (o *Status) GetCardano() StatusCardano {
	if o == nil  {
		var ret StatusCardano
		return ret
	}

	return o.Cardano
}

// GetCardanoOk returns a tuple with the Cardano field value
// and a boolean to check if the value has been set.
func (o *Status) GetCardanoOk() (*StatusCardano, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cardano, true
}

// SetCardano sets field value
func (o *Status) SetCardano(v StatusCardano) {
	o.Cardano = v
}

// GetMaintenance returns the Maintenance field value
func (o *Status) GetMaintenance() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Maintenance
}

// GetMaintenanceOk returns a tuple with the Maintenance field value
// and a boolean to check if the value has been set.
func (o *Status) GetMaintenanceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Maintenance, true
}

// SetMaintenance sets field value
func (o *Status) SetMaintenance(v bool) {
	o.Maintenance = v
}

// GetStatus returns the Status field value
func (o *Status) GetStatus() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Status) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Status) SetStatus(v string) {
	o.Status = v
}

func (o Status) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cardano"] = o.Cardano
	}
	if true {
		toSerialize["maintenance"] = o.Maintenance
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableStatus struct {
	value *Status
	isSet bool
}

func (v NullableStatus) Get() *Status {
	return v.value
}

func (v *NullableStatus) Set(val *Status) {
	v.value = val
	v.isSet = true
}

func (v NullableStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatus(val *Status) *NullableStatus {
	return &NullableStatus{value: val, isSet: true}
}

func (v NullableStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


