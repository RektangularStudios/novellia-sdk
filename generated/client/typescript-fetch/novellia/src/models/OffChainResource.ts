/* tslint:disable */
/* eslint-disable */
/**
 * novellia
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: contact@rektangularstudios.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Off-chain resource used in Novellia Token Standard
 * @export
 * @interface OffChainResource
 */
export interface OffChainResource {
    /**
     * Resource identifier interpreted by application. These may correspond to specific names resources a client expects.
     * @type {string}
     * @memberof OffChainResource
     */
    resourceId: string;
    /**
     * Short text describing resource. Helpful to know what the resource should have been if the resource breaks.
     * @type {string}
     * @memberof OffChainResource
     */
    description: string;
    /**
     * Order to load resource. Lower numbers load first. Resources with the same name will progressively overwrite each other.
     * @type {number}
     * @memberof OffChainResource
     */
    priority: number;
    /**
     * The multihash of the resource. In most cases, this may be identical to an IPFS hash.
     * @type {string}
     * @memberof OffChainResource
     */
    multihash: string;
    /**
     * Hint regarding file state prior to hashing (ipfs, direct)
     * @type {string}
     * @memberof OffChainResource
     */
    hashSourceType: string;
    /**
     * Redundant resource URLs. These should all point to the same file on different hosts.
     * @type {Array<string>}
     * @memberof OffChainResource
     */
    url: Array<string>;
    /**
     * MIME type of resource.
     * @type {string}
     * @memberof OffChainResource
     */
    contentType: string;
}

export function OffChainResourceFromJSON(json: any): OffChainResource {
    return OffChainResourceFromJSONTyped(json, false);
}

export function OffChainResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): OffChainResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resourceId': json['resource_id'],
        'description': json['description'],
        'priority': json['priority'],
        'multihash': json['multihash'],
        'hashSourceType': json['hash_source_type'],
        'url': json['url'],
        'contentType': json['content_type'],
    };
}

export function OffChainResourceToJSON(value?: OffChainResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resource_id': value.resourceId,
        'description': value.description,
        'priority': value.priority,
        'multihash': value.multihash,
        'hash_source_type': value.hashSourceType,
        'url': value.url,
        'content_type': value.contentType,
    };
}


