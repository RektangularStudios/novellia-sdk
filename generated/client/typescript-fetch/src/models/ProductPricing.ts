/* tslint:disable */
/* eslint-disable */
/**
 * novellia-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@rektangularstudios.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Pricing information for making a purchase
 * @export
 * @interface ProductPricing
 */
export interface ProductPricing {
    /**
     * Currency product is priced with
     * @type {string}
     * @memberof ProductPricing
     */
    currencyPolicyId: string;
    /**
     * Price for a single item of product type
     * @type {number}
     * @memberof ProductPricing
     */
    unitPrice: number;
    /**
     * Maximum units purchasable in a single transaction
     * @type {number}
     * @memberof ProductPricing
     */
    maxOrderSize: number;
    /**
     * Address to send funds to purchase token. Leave empty if token is not yet for sale.
     * @type {string}
     * @memberof ProductPricing
     */
    purchaseAddress?: string;
    /**
     * When the product is becoming available for sale. Leave empty if this is undetermined.
     * @type {string}
     * @memberof ProductPricing
     */
    dateAvailable?: string;
}

export function ProductPricingFromJSON(json: any): ProductPricing {
    return ProductPricingFromJSONTyped(json, false);
}

export function ProductPricingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductPricing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currencyPolicyId': json['currency_policy_id'],
        'unitPrice': json['unit_price'],
        'maxOrderSize': json['max_order_size'],
        'purchaseAddress': !exists(json, 'purchase_address') ? undefined : json['purchase_address'],
        'dateAvailable': !exists(json, 'date_available') ? undefined : json['date_available'],
    };
}

export function ProductPricingToJSON(value?: ProductPricing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currency_policy_id': value.currencyPolicyId,
        'unit_price': value.unitPrice,
        'max_order_size': value.maxOrderSize,
        'purchase_address': value.purchaseAddress,
        'date_available': value.dateAvailable,
    };
}


