/* tslint:disable */
/* eslint-disable */
/**
 * novellia-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: contact@rektangularstudios.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderCustomer,
    OrderCustomerFromJSON,
    OrderCustomerFromJSONTyped,
    OrderCustomerToJSON,
    OrderPayment,
    OrderPaymentFromJSON,
    OrderPaymentFromJSONTyped,
    OrderPaymentToJSON,
    OrderProducts,
    OrderProductsFromJSON,
    OrderProductsFromJSONTyped,
    OrderProductsToJSON,
} from './';

/**
 * Describes a single order
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * 
     * @type {Array<OrderProducts>}
     * @memberof Order
     */
    products: Array<OrderProducts>;
    /**
     * 
     * @type {OrderCustomer}
     * @memberof Order
     */
    customer: OrderCustomer;
    /**
     * 
     * @type {OrderPayment}
     * @memberof Order
     */
    payment?: OrderPayment;
    /**
     * Order ID for future reference
     * @type {string}
     * @memberof Order
     */
    orderId?: string;
}

export function OrderFromJSON(json: any): Order {
    return OrderFromJSONTyped(json, false);
}

export function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'products': ((json['products'] as Array<any>).map(OrderProductsFromJSON)),
        'customer': OrderCustomerFromJSON(json['customer']),
        'payment': !exists(json, 'payment') ? undefined : OrderPaymentFromJSON(json['payment']),
        'orderId': !exists(json, 'order_id') ? undefined : json['order_id'],
    };
}

export function OrderToJSON(value?: Order | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'products': ((value.products as Array<any>).map(OrderProductsToJSON)),
        'customer': OrderCustomerToJSON(value.customer),
        'payment': OrderPaymentToJSON(value.payment),
        'order_id': value.orderId,
    };
}


