/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// Extended721Token Easily parsable data for Extended 721 Token
type Extended721Token struct {
	NativeToken *NativeToken `json:"native_token,omitempty"`
	// List of extensions for parser to understand feature set. This may be empty, in which case the token is interpreted as just a 721 token.
	Extension *[]string `json:"extension,omitempty"`
	// Token number in a set. Redundant field which makes no sense for tokens without a total-order.
	Id int32 `json:"id"`
	// Display name for token.
	Name string `json:"name"`
	// Image URL without source redundancy.
	Image string `json:"image"`
}

// NewExtended721Token instantiates a new Extended721Token object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtended721Token(id int32, name string, image string, ) *Extended721Token {
	this := Extended721Token{}
	this.Id = id
	this.Name = name
	this.Image = image
	return &this
}

// NewExtended721TokenWithDefaults instantiates a new Extended721Token object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtended721TokenWithDefaults() *Extended721Token {
	this := Extended721Token{}
	return &this
}

// GetNativeToken returns the NativeToken field value if set, zero value otherwise.
func (o *Extended721Token) GetNativeToken() NativeToken {
	if o == nil || o.NativeToken == nil {
		var ret NativeToken
		return ret
	}
	return *o.NativeToken
}

// GetNativeTokenOk returns a tuple with the NativeToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Extended721Token) GetNativeTokenOk() (*NativeToken, bool) {
	if o == nil || o.NativeToken == nil {
		return nil, false
	}
	return o.NativeToken, true
}

// HasNativeToken returns a boolean if a field has been set.
func (o *Extended721Token) HasNativeToken() bool {
	if o != nil && o.NativeToken != nil {
		return true
	}

	return false
}

// SetNativeToken gets a reference to the given NativeToken and assigns it to the NativeToken field.
func (o *Extended721Token) SetNativeToken(v NativeToken) {
	o.NativeToken = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *Extended721Token) GetExtension() []string {
	if o == nil || o.Extension == nil {
		var ret []string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Extended721Token) GetExtensionOk() (*[]string, bool) {
	if o == nil || o.Extension == nil {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *Extended721Token) HasExtension() bool {
	if o != nil && o.Extension != nil {
		return true
	}

	return false
}

// SetExtension gets a reference to the given []string and assigns it to the Extension field.
func (o *Extended721Token) SetExtension(v []string) {
	o.Extension = &v
}

// GetId returns the Id field value
func (o *Extended721Token) GetId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Extended721Token) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Extended721Token) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Extended721Token) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Extended721Token) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Extended721Token) SetName(v string) {
	o.Name = v
}

// GetImage returns the Image field value
func (o *Extended721Token) GetImage() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *Extended721Token) GetImageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *Extended721Token) SetImage(v string) {
	o.Image = v
}

func (o Extended721Token) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NativeToken != nil {
		toSerialize["native_token"] = o.NativeToken
	}
	if o.Extension != nil {
		toSerialize["extension"] = o.Extension
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["image"] = o.Image
	}
	return json.Marshal(toSerialize)
}

type NullableExtended721Token struct {
	value *Extended721Token
	isSet bool
}

func (v NullableExtended721Token) Get() *Extended721Token {
	return v.value
}

func (v *NullableExtended721Token) Set(val *Extended721Token) {
	v.value = val
	v.isSet = true
}

func (v NullableExtended721Token) IsSet() bool {
	return v.isSet
}

func (v *NullableExtended721Token) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtended721Token(val *Extended721Token) *NullableExtended721Token {
	return &NullableExtended721Token{value: val, isSet: true}
}

func (v NullableExtended721Token) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtended721Token) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


