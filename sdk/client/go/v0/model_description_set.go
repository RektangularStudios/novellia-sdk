/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// DescriptionSet Set of descriptions
type DescriptionSet struct {
	// A short description makes a good header
	Short string `json:"short"`
	// A long description makes a good paragraph body. Supports Markdown.
	Long string `json:"long"`
}

// NewDescriptionSet instantiates a new DescriptionSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescriptionSet(short string, long string, ) *DescriptionSet {
	this := DescriptionSet{}
	this.Short = short
	this.Long = long
	return &this
}

// NewDescriptionSetWithDefaults instantiates a new DescriptionSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescriptionSetWithDefaults() *DescriptionSet {
	this := DescriptionSet{}
	return &this
}

// GetShort returns the Short field value
func (o *DescriptionSet) GetShort() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Short
}

// GetShortOk returns a tuple with the Short field value
// and a boolean to check if the value has been set.
func (o *DescriptionSet) GetShortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Short, true
}

// SetShort sets field value
func (o *DescriptionSet) SetShort(v string) {
	o.Short = v
}

// GetLong returns the Long field value
func (o *DescriptionSet) GetLong() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Long
}

// GetLongOk returns a tuple with the Long field value
// and a boolean to check if the value has been set.
func (o *DescriptionSet) GetLongOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Long, true
}

// SetLong sets field value
func (o *DescriptionSet) SetLong(v string) {
	o.Long = v
}

func (o DescriptionSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["short"] = o.Short
	}
	if true {
		toSerialize["long"] = o.Long
	}
	return json.Marshal(toSerialize)
}

type NullableDescriptionSet struct {
	value *DescriptionSet
	isSet bool
}

func (v NullableDescriptionSet) Get() *DescriptionSet {
	return v.value
}

func (v *NullableDescriptionSet) Set(val *DescriptionSet) {
	v.value = val
	v.isSet = true
}

func (v NullableDescriptionSet) IsSet() bool {
	return v.isSet
}

func (v *NullableDescriptionSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescriptionSet(val *DescriptionSet) *NullableDescriptionSet {
	return &NullableDescriptionSet{value: val, isSet: true}
}

func (v NullableDescriptionSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescriptionSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


