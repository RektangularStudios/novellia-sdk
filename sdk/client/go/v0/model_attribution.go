/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// Attribution Attribution information for artist, sculptor, whoever.
type Attribution struct {
	// Name to give attribution to
	AuthorName string `json:"author_name"`
	// URLs to portfolios, websites, etc.
	Url []string `json:"url"`
	// Description of work attributed
	WorkAttributed string `json:"work_attributed"`
}

// NewAttribution instantiates a new Attribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttribution(authorName string, url []string, workAttributed string, ) *Attribution {
	this := Attribution{}
	this.AuthorName = authorName
	this.Url = url
	this.WorkAttributed = workAttributed
	return &this
}

// NewAttributionWithDefaults instantiates a new Attribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributionWithDefaults() *Attribution {
	this := Attribution{}
	return &this
}

// GetAuthorName returns the AuthorName field value
func (o *Attribution) GetAuthorName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AuthorName
}

// GetAuthorNameOk returns a tuple with the AuthorName field value
// and a boolean to check if the value has been set.
func (o *Attribution) GetAuthorNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthorName, true
}

// SetAuthorName sets field value
func (o *Attribution) SetAuthorName(v string) {
	o.AuthorName = v
}

// GetUrl returns the Url field value
func (o *Attribution) GetUrl() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Attribution) GetUrlOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Attribution) SetUrl(v []string) {
	o.Url = v
}

// GetWorkAttributed returns the WorkAttributed field value
func (o *Attribution) GetWorkAttributed() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.WorkAttributed
}

// GetWorkAttributedOk returns a tuple with the WorkAttributed field value
// and a boolean to check if the value has been set.
func (o *Attribution) GetWorkAttributedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WorkAttributed, true
}

// SetWorkAttributed sets field value
func (o *Attribution) SetWorkAttributed(v string) {
	o.WorkAttributed = v
}

func (o Attribution) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["author_name"] = o.AuthorName
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["work_attributed"] = o.WorkAttributed
	}
	return json.Marshal(toSerialize)
}

type NullableAttribution struct {
	value *Attribution
	isSet bool
}

func (v NullableAttribution) Get() *Attribution {
	return v.value
}

func (v *NullableAttribution) Set(val *Attribution) {
	v.value = val
	v.isSet = true
}

func (v NullableAttribution) IsSet() bool {
	return v.isSet
}

func (v *NullableAttribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttribution(val *Attribution) *NullableAttribution {
	return &NullableAttribution{value: val, isSet: true}
}

func (v NullableAttribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


