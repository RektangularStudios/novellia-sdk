/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// CardanoTransaction A Cardano transaction to be signed and submitted.
type CardanoTransaction struct {
	// text of transaction file
	Transaction string `json:"transaction"`
	// Cost to submit TX in lovelace (1 ADA = 1,000,000 lovelace)
	FeeLovelace int32 `json:"fee_lovelace"`
	// Indicates if the transaction is signed or raw
	Signed bool `json:"signed"`
}

// NewCardanoTransaction instantiates a new CardanoTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardanoTransaction(transaction string, feeLovelace int32, signed bool, ) *CardanoTransaction {
	this := CardanoTransaction{}
	this.Transaction = transaction
	this.FeeLovelace = feeLovelace
	this.Signed = signed
	return &this
}

// NewCardanoTransactionWithDefaults instantiates a new CardanoTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardanoTransactionWithDefaults() *CardanoTransaction {
	this := CardanoTransaction{}
	return &this
}

// GetTransaction returns the Transaction field value
func (o *CardanoTransaction) GetTransaction() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value
// and a boolean to check if the value has been set.
func (o *CardanoTransaction) GetTransactionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Transaction, true
}

// SetTransaction sets field value
func (o *CardanoTransaction) SetTransaction(v string) {
	o.Transaction = v
}

// GetFeeLovelace returns the FeeLovelace field value
func (o *CardanoTransaction) GetFeeLovelace() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.FeeLovelace
}

// GetFeeLovelaceOk returns a tuple with the FeeLovelace field value
// and a boolean to check if the value has been set.
func (o *CardanoTransaction) GetFeeLovelaceOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FeeLovelace, true
}

// SetFeeLovelace sets field value
func (o *CardanoTransaction) SetFeeLovelace(v int32) {
	o.FeeLovelace = v
}

// GetSigned returns the Signed field value
func (o *CardanoTransaction) GetSigned() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Signed
}

// GetSignedOk returns a tuple with the Signed field value
// and a boolean to check if the value has been set.
func (o *CardanoTransaction) GetSignedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Signed, true
}

// SetSigned sets field value
func (o *CardanoTransaction) SetSigned(v bool) {
	o.Signed = v
}

func (o CardanoTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transaction"] = o.Transaction
	}
	if true {
		toSerialize["fee_lovelace"] = o.FeeLovelace
	}
	if true {
		toSerialize["signed"] = o.Signed
	}
	return json.Marshal(toSerialize)
}

type NullableCardanoTransaction struct {
	value *CardanoTransaction
	isSet bool
}

func (v NullableCardanoTransaction) Get() *CardanoTransaction {
	return v.value
}

func (v *NullableCardanoTransaction) Set(val *CardanoTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableCardanoTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableCardanoTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardanoTransaction(val *CardanoTransaction) *NullableCardanoTransaction {
	return &NullableCardanoTransaction{value: val, isSet: true}
}

func (v NullableCardanoTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardanoTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


