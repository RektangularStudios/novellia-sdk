/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// OccultaNovelliaCharacterCard Metadata relating to card / distribution
type OccultaNovelliaCharacterCard struct {
	// The character number
	Number int32 `json:"number"`
	// The set this character was released in
	ReleaseSet string `json:"release_set"`
	// Rarity of card (\"Rare\", \"Kinda Not\", \"Not That Rare\")
	Rarity string `json:"rarity"`
}

// NewOccultaNovelliaCharacterCard instantiates a new OccultaNovelliaCharacterCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOccultaNovelliaCharacterCard(number int32, releaseSet string, rarity string, ) *OccultaNovelliaCharacterCard {
	this := OccultaNovelliaCharacterCard{}
	this.Number = number
	this.ReleaseSet = releaseSet
	this.Rarity = rarity
	return &this
}

// NewOccultaNovelliaCharacterCardWithDefaults instantiates a new OccultaNovelliaCharacterCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOccultaNovelliaCharacterCardWithDefaults() *OccultaNovelliaCharacterCard {
	this := OccultaNovelliaCharacterCard{}
	return &this
}

// GetNumber returns the Number field value
func (o *OccultaNovelliaCharacterCard) GetNumber() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *OccultaNovelliaCharacterCard) GetNumberOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *OccultaNovelliaCharacterCard) SetNumber(v int32) {
	o.Number = v
}

// GetReleaseSet returns the ReleaseSet field value
func (o *OccultaNovelliaCharacterCard) GetReleaseSet() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ReleaseSet
}

// GetReleaseSetOk returns a tuple with the ReleaseSet field value
// and a boolean to check if the value has been set.
func (o *OccultaNovelliaCharacterCard) GetReleaseSetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReleaseSet, true
}

// SetReleaseSet sets field value
func (o *OccultaNovelliaCharacterCard) SetReleaseSet(v string) {
	o.ReleaseSet = v
}

// GetRarity returns the Rarity field value
func (o *OccultaNovelliaCharacterCard) GetRarity() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Rarity
}

// GetRarityOk returns a tuple with the Rarity field value
// and a boolean to check if the value has been set.
func (o *OccultaNovelliaCharacterCard) GetRarityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rarity, true
}

// SetRarity sets field value
func (o *OccultaNovelliaCharacterCard) SetRarity(v string) {
	o.Rarity = v
}

func (o OccultaNovelliaCharacterCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["release_set"] = o.ReleaseSet
	}
	if true {
		toSerialize["rarity"] = o.Rarity
	}
	return json.Marshal(toSerialize)
}

type NullableOccultaNovelliaCharacterCard struct {
	value *OccultaNovelliaCharacterCard
	isSet bool
}

func (v NullableOccultaNovelliaCharacterCard) Get() *OccultaNovelliaCharacterCard {
	return v.value
}

func (v *NullableOccultaNovelliaCharacterCard) Set(val *OccultaNovelliaCharacterCard) {
	v.value = val
	v.isSet = true
}

func (v NullableOccultaNovelliaCharacterCard) IsSet() bool {
	return v.isSet
}

func (v *NullableOccultaNovelliaCharacterCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOccultaNovelliaCharacterCard(val *OccultaNovelliaCharacterCard) *NullableOccultaNovelliaCharacterCard {
	return &NullableOccultaNovelliaCharacterCard{value: val, isSet: true}
}

func (v NullableOccultaNovelliaCharacterCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOccultaNovelliaCharacterCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


