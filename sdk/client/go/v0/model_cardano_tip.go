/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// CardanoTip Cardano chain tip information
type CardanoTip struct {
	// Latest Cardano block
	Block int32 `json:"block"`
	// Latest Cardano epoch
	Epoch int32 `json:"epoch"`
}

// NewCardanoTip instantiates a new CardanoTip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardanoTip(block int32, epoch int32, ) *CardanoTip {
	this := CardanoTip{}
	this.Block = block
	this.Epoch = epoch
	return &this
}

// NewCardanoTipWithDefaults instantiates a new CardanoTip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardanoTipWithDefaults() *CardanoTip {
	this := CardanoTip{}
	return &this
}

// GetBlock returns the Block field value
func (o *CardanoTip) GetBlock() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Block
}

// GetBlockOk returns a tuple with the Block field value
// and a boolean to check if the value has been set.
func (o *CardanoTip) GetBlockOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Block, true
}

// SetBlock sets field value
func (o *CardanoTip) SetBlock(v int32) {
	o.Block = v
}

// GetEpoch returns the Epoch field value
func (o *CardanoTip) GetEpoch() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value
// and a boolean to check if the value has been set.
func (o *CardanoTip) GetEpochOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Epoch, true
}

// SetEpoch sets field value
func (o *CardanoTip) SetEpoch(v int32) {
	o.Epoch = v
}

func (o CardanoTip) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["block"] = o.Block
	}
	if true {
		toSerialize["epoch"] = o.Epoch
	}
	return json.Marshal(toSerialize)
}

type NullableCardanoTip struct {
	value *CardanoTip
	isSet bool
}

func (v NullableCardanoTip) Get() *CardanoTip {
	return v.value
}

func (v *NullableCardanoTip) Set(val *CardanoTip) {
	v.value = val
	v.isSet = true
}

func (v NullableCardanoTip) IsSet() bool {
	return v.isSet
}

func (v *NullableCardanoTip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardanoTip(val *CardanoTip) *NullableCardanoTip {
	return &NullableCardanoTip{value: val, isSet: true}
}

func (v NullableCardanoTip) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardanoTip) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


