/*
 * novellia
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.8.0
 * Contact: contact@rektangularstudios.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package novellia

import (
	"encoding/json"
)

// NovelliaProduct Product listed on Novelia without a token
type NovelliaProduct struct {
	// Attribution of rights to product.
	Copyright string `json:"copyright"`
	// List of publishers or entities involved in token creation. Useful for onlookers to determine token origin.
	Publisher []string `json:"publisher"`
	// Iteration in update sequence for product.
	Version int32 `json:"version"`
	// Display name for token.
	Name string `json:"name"`
	// Tags for sorting and filtering. \"nsfw\" indicates NSFW content
	Tags []string `json:"tags"`
	Commission *[]Commission `json:"commission,omitempty"`
	Description DescriptionSet `json:"description"`
	Resource []OffChainResource `json:"resource"`
	// Token number in a set. Redundant field which makes no sense for tokens without a total-order.
	Id *int32 `json:"id,omitempty"`
}

// NewNovelliaProduct instantiates a new NovelliaProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNovelliaProduct(copyright string, publisher []string, version int32, name string, tags []string, description DescriptionSet, resource []OffChainResource, ) *NovelliaProduct {
	this := NovelliaProduct{}
	this.Copyright = copyright
	this.Publisher = publisher
	this.Version = version
	this.Name = name
	this.Tags = tags
	this.Description = description
	this.Resource = resource
	return &this
}

// NewNovelliaProductWithDefaults instantiates a new NovelliaProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNovelliaProductWithDefaults() *NovelliaProduct {
	this := NovelliaProduct{}
	return &this
}

// GetCopyright returns the Copyright field value
func (o *NovelliaProduct) GetCopyright() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Copyright
}

// GetCopyrightOk returns a tuple with the Copyright field value
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetCopyrightOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Copyright, true
}

// SetCopyright sets field value
func (o *NovelliaProduct) SetCopyright(v string) {
	o.Copyright = v
}

// GetPublisher returns the Publisher field value
func (o *NovelliaProduct) GetPublisher() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field value
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetPublisherOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Publisher, true
}

// SetPublisher sets field value
func (o *NovelliaProduct) SetPublisher(v []string) {
	o.Publisher = v
}

// GetVersion returns the Version field value
func (o *NovelliaProduct) GetVersion() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *NovelliaProduct) SetVersion(v int32) {
	o.Version = v
}

// GetName returns the Name field value
func (o *NovelliaProduct) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NovelliaProduct) SetName(v string) {
	o.Name = v
}

// GetTags returns the Tags field value
func (o *NovelliaProduct) GetTags() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetTagsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *NovelliaProduct) SetTags(v []string) {
	o.Tags = v
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *NovelliaProduct) GetCommission() []Commission {
	if o == nil || o.Commission == nil {
		var ret []Commission
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetCommissionOk() (*[]Commission, bool) {
	if o == nil || o.Commission == nil {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *NovelliaProduct) HasCommission() bool {
	if o != nil && o.Commission != nil {
		return true
	}

	return false
}

// SetCommission gets a reference to the given []Commission and assigns it to the Commission field.
func (o *NovelliaProduct) SetCommission(v []Commission) {
	o.Commission = &v
}

// GetDescription returns the Description field value
func (o *NovelliaProduct) GetDescription() DescriptionSet {
	if o == nil  {
		var ret DescriptionSet
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetDescriptionOk() (*DescriptionSet, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *NovelliaProduct) SetDescription(v DescriptionSet) {
	o.Description = v
}

// GetResource returns the Resource field value
func (o *NovelliaProduct) GetResource() []OffChainResource {
	if o == nil  {
		var ret []OffChainResource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetResourceOk() (*[]OffChainResource, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *NovelliaProduct) SetResource(v []OffChainResource) {
	o.Resource = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NovelliaProduct) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NovelliaProduct) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NovelliaProduct) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *NovelliaProduct) SetId(v int32) {
	o.Id = &v
}

func (o NovelliaProduct) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["copyright"] = o.Copyright
	}
	if true {
		toSerialize["publisher"] = o.Publisher
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if o.Commission != nil {
		toSerialize["commission"] = o.Commission
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["resource"] = o.Resource
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableNovelliaProduct struct {
	value *NovelliaProduct
	isSet bool
}

func (v NullableNovelliaProduct) Get() *NovelliaProduct {
	return v.value
}

func (v *NullableNovelliaProduct) Set(val *NovelliaProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableNovelliaProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableNovelliaProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNovelliaProduct(val *NovelliaProduct) *NullableNovelliaProduct {
	return &NullableNovelliaProduct{value: val, isSet: true}
}

func (v NullableNovelliaProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNovelliaProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


