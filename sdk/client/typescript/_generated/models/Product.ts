/* tslint:disable */
/* eslint-disable */
/**
 * novellia-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@rektangularstudios.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProductArtist,
    ProductArtistFromJSON,
    ProductArtistFromJSONTyped,
    ProductArtistToJSON,
    ProductAsset,
    ProductAssetFromJSON,
    ProductAssetFromJSONTyped,
    ProductAssetToJSON,
    ProductMarket,
    ProductMarketFromJSON,
    ProductMarketFromJSONTyped,
    ProductMarketToJSON,
    ProductMetadata,
    ProductMetadataFromJSON,
    ProductMetadataFromJSONTyped,
    ProductMetadataToJSON,
    ProductOrganization,
    ProductOrganizationFromJSON,
    ProductOrganizationFromJSONTyped,
    ProductOrganizationToJSON,
    ProductPricing,
    ProductPricingFromJSON,
    ProductPricingFromJSONTyped,
    ProductPricingToJSON,
    ProductProduct,
    ProductProductFromJSON,
    ProductProductFromJSONTyped,
    ProductProductToJSON,
    ProductStock,
    ProductStockFromJSON,
    ProductStockFromJSONTyped,
    ProductStockToJSON,
} from './';

/**
 * A product to display for sale
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * 
     * @type {ProductAsset}
     * @memberof Product
     */
    asset: ProductAsset;
    /**
     * 
     * @type {ProductPricing}
     * @memberof Product
     */
    pricing: ProductPricing;
    /**
     * 
     * @type {ProductOrganization}
     * @memberof Product
     */
    organization: ProductOrganization;
    /**
     * 
     * @type {ProductMarket}
     * @memberof Product
     */
    market: ProductMarket;
    /**
     * 
     * @type {ProductStock}
     * @memberof Product
     */
    stock: ProductStock;
    /**
     * 
     * @type {ProductMetadata}
     * @memberof Product
     */
    metadata: ProductMetadata;
    /**
     * 
     * @type {ProductArtist}
     * @memberof Product
     */
    artist?: ProductArtist;
    /**
     * 
     * @type {ProductProduct}
     * @memberof Product
     */
    product: ProductProduct;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'asset': ProductAssetFromJSON(json['asset']),
        'pricing': ProductPricingFromJSON(json['pricing']),
        'organization': ProductOrganizationFromJSON(json['organization']),
        'market': ProductMarketFromJSON(json['market']),
        'stock': ProductStockFromJSON(json['stock']),
        'metadata': ProductMetadataFromJSON(json['metadata']),
        'artist': !exists(json, 'artist') ? undefined : ProductArtistFromJSON(json['artist']),
        'product': ProductProductFromJSON(json['product']),
    };
}

export function ProductToJSON(value?: Product | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'asset': ProductAssetToJSON(value.asset),
        'pricing': ProductPricingToJSON(value.pricing),
        'organization': ProductOrganizationToJSON(value.organization),
        'market': ProductMarketToJSON(value.market),
        'stock': ProductStockToJSON(value.stock),
        'metadata': ProductMetadataToJSON(value.metadata),
        'artist': ProductArtistToJSON(value.artist),
        'product': ProductProductToJSON(value.product),
    };
}


